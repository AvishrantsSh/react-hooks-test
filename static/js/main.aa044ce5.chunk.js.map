{"version":3,"sources":["components/Header.js","components/AddContact.js","components/ContactCard.js","components/ContactList.js","components/App.js","index.js"],"names":["Header","className","AddContact","state","name","email","addContact","e","preventDefault","alert","props","addContactHandler","setState","onSubmit","this","type","id","aria-describedby","placeholder","onChange","target","value","React","Component","ContactCard","contact","style","fontWeight","color","ContactList","renderContactList","contacts","map","App","LOCAL_STORAGE_KEY","useState","setContacts","useEffect","retrieveContacts","JSON","parse","localStorage","getItem","setItem","stringify","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAYeA,EAVA,WACX,OACI,qBAAKC,UAAU,gBAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,sD,6BCuCDC,E,4MA1CXC,MAAQ,CACJC,KAAM,GACNC,MAAO,I,EAGXC,WAAa,SAACC,GACVA,EAAEC,iBACsB,KAApB,EAAKL,MAAMC,MAAoC,KAArB,EAAKD,MAAME,OACrCI,MAAM,iCAGV,EAAKC,MAAMC,kBAAkB,EAAKR,OAClC,EAAKS,SAAS,CAACP,MAAO,GAAID,KAAM,M,4CAGpC,WAAU,IAAD,OACL,OACI,sBAAKH,UAAU,iBAAf,UACI,6CACA,uBAAMA,UAAU,OAAOY,SAAUC,KAAKR,WAAtC,UACI,sBAAKL,UAAU,aAAf,UACI,kDACA,uBAAOc,KAAK,OAAOd,UAAU,eAAee,GAAG,YAAYC,mBAAiB,WAAWC,YAAY,aAAaC,SAAU,SAACZ,GACvH,EAAKK,SAAS,CAAER,KAAMG,EAAEa,OAAOC,SAChCA,MAAOP,KAAKX,MAAMC,OAErB,uBAAOY,GAAG,WAAWf,UAAU,uBAA/B,2CAEJ,sBAAKA,UAAU,aAAf,UACI,kDACA,uBAAOc,KAAK,QAAQd,UAAU,eAAee,GAAG,aAAaC,mBAAiB,YAAYC,YAAY,cAAcC,SAAU,SAACZ,GAC3H,EAAKK,SAAS,CAAEP,MAAOE,EAAEa,OAAOC,SACjCA,MAAOP,KAAKX,MAAME,QACrB,uBAAOW,GAAG,YAAYf,UAAU,uBAAhC,+DAEJ,wBAAQA,UAAU,kBAAkBc,KAAK,SAAzC,8B,GApCKO,IAAMC,WCkBhBC,EAlBK,SAACd,GAAW,IAAD,EACCA,EAAMe,QAA1BT,EADmB,EACnBA,GAAIZ,EADe,EACfA,KAAMC,EADS,EACTA,MAElB,OACI,oBAAIJ,UAAU,kBAAd,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKyB,MAAO,CAAEC,WAAY,OAA1B,SAAoCvB,IACpC,8BAAMC,OAEV,qBAAKJ,UAAU,QAAf,SACI,sBAAMyB,MAAO,CAACE,MAAO,OAArB,0BAPyBZ,ICW9Ba,EAdK,SAACnB,GACjB,IAAMoB,EAAoBpB,EAAMqB,SAASC,KAAI,SAACP,GAC1C,OACI,cAAC,EAAD,CAAaA,QAASA,OAI9B,OACI,oBAAIxB,UAAU,aAAd,SACK6B,KCqBEG,MA3Bf,WACE,IAAMC,EAAoB,WADb,EAEmBC,mBAAS,IAF5B,mBAENJ,EAFM,KAEIK,EAFJ,KAkBb,OATAC,qBAAU,WACR,IAAMC,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQR,IACrDI,GAAkBF,EAAYE,KACjC,IAEHD,qBAAU,WACRI,aAAaE,QAAQT,EAAmBK,KAAKK,UAAUb,MACtD,CAACA,IAGF,sBAAK9B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYU,kBAjBU,SAACc,GACzBoB,QAAQC,IAAIrB,GACZW,EAAY,GAAD,mBAAKL,GAAL,CAAeN,QAgBxB,cAAC,EAAD,CAAaM,SAAUA,QCxB7BgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aa044ce5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <div className=\"ui fixed-menu\">\n            <div className=\"ui container center\">\n                <h1>Contact Manager</h1>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react'\n\nclass AddContact extends React.Component {\n    state = {\n        name: \"\",\n        email: \"\",\n    }\n\n    addContact = (e) => {\n        e.preventDefault()\n        if (this.state.name === \"\" || this.state.email === \"\") {\n            alert(\"Please enter a name and email\")\n        }\n\n        this.props.addContactHandler(this.state)\n        this.setState({email: \"\", name: \"\"})\n    }\n\n    render() {\n        return (\n            <div className=\"container my-4\">\n                <h2>Add Contact</h2>\n                <form className=\"form\" onSubmit={this.addContact}>\n                    <div className=\"form-group\">\n                        <label>Email address</label>\n                        <input type=\"text\" className=\"form-control\" id=\"inputName\" aria-describedby=\"nameHelp\" placeholder=\"Enter Name\" onChange={(e) => {\n                            this.setState({ name: e.target.value })\n                        }} value={this.state.name} />\n\n                        <small id=\"nameHelp\" className=\"form-text text-muted\">Name must be unique though</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Email address</label>\n                        <input type=\"email\" className=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={(e) => {\n                            this.setState({ email: e.target.value })\n                        }} value={this.state.email} />\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                    </div>\n                    <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddContact","import React from 'react'\n\nconst ContactCard = (props) => {\n    const { id, name, email } = props.contact\n\n    return (\n        <li className=\"list-group-item\" key={id}>\n            <div className=\"row\">\n                <div className=\"content col-9\">\n                    <div style={{ fontWeight: \"500\" }}>{name}</div>\n                    <div>{email}</div>\n                </div>\n                <div className=\"col-3\">\n                    <span style={{color: \"red\"}}>Delete</span>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default ContactCard","import React from 'react'\nimport ContactCard  from './ContactCard'\n\nconst ContactList = (props) => {\n    const renderContactList = props.contacts.map((contact) => {\n        return (\n            <ContactCard contact={contact}/>\n        )\n    })\n\n    return (\n        <ul className=\"list-group\">\n            {renderContactList}\n        </ul>\n    )\n}\n\nexport default ContactList","import React, { useState, useEffect } from 'react'\nimport '../styles/App.css'\nimport Header from './Header'\nimport AddContact from './AddContact'\nimport ContactList from './ContactList'\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"contacts\"\n  const [contacts, setContacts] = useState([])\n\n  const addContactHandler = (contact) => {\n    console.log(contact)\n    setContacts([...contacts, contact])\n  }\n\n  useEffect(() => {\n    const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (retrieveContacts) setContacts(retrieveContacts)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts))\n  }, [contacts])\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <AddContact addContactHandler={addContactHandler} />\n      <ContactList contacts={contacts} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}